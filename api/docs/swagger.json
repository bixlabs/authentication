{
    "swagger": "2.0",
    "info": {
        "description": "Leverage of authentication functionality",
        "title": "Go-Authenticator",
        "contact": {
            "name": "API Support",
            "url": "https://bixlabs.com/",
            "email": "jarrieta@bixlabs.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "{{.Host}}",
    "basePath": "/",
    "paths": {
        "/user/change-password": {
            "put": {
                "description": "It changes the password provided the old one and a new password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Change password functionality",
                "parameters": [
                    {
                        "description": "Change password Request",
                        "name": "changePassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/changepass.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/changepass.SwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Attempts to authenticate the user with the given credentials.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login functionality",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/login.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/login.SwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    }
                }
            }
        },
        "/user/reset-password": {
            "put": {
                "description": "It resets your password given the correct code and new password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset password functionality",
                "parameters": [
                    {
                        "description": "Reset password Request",
                        "name": "resetPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/resetpass.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/resetpass.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "408": {
                        "description": "Request Timeout",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "504": {
                        "description": "Gateway Timeout",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    }
                }
            }
        },
        "/user/reset-password-request": {
            "put": {
                "description": "It enters into the flow of reset password sending an email with instructions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Forgot password request functionality",
                "parameters": [
                    {
                        "description": "Forgot password request",
                        "name": "resetPassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/forgotpass.Request"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/forgotpass.SwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    }
                }
            }
        },
        "/user/signup": {
            "post": {
                "description": "Attempts to create a user provided the correct information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Signup functionality",
                "parameters": [
                    {
                        "description": "Signup Request",
                        "name": "signup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/signup.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/signup.SwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    }
                }
            }
        },
        "/user/token/validate": {
            "get": {
                "description": "If the JWT is valid this endpoint returns the user inside of the token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Validates a JWT and returns the claims for it.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization: Bearer \u003cjwtToken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/token.SwaggerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/rest.ResponseWrapper"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "changepass.Request": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "changepass.Response": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/changepass.Result"
                }
            }
        },
        "changepass.Result": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "changepass.SwaggerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/changepass.Response"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "forgotpass.Request": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "forgotpass.Result": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "forgotpass.SwaggerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/forgotpass.Result"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "login.Request": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "login.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/login.Result"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "login.Result": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
<<<<<<< HEAD
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
=======
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
>>>>>>> master
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/login.Result"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "login.SwaggerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/login.Response"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "resetpass.Request": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "resetpass.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "type": "Result"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "rest.ResponseWrapper": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "signup.Request": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "familyName": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "secondFamilyName": {
                    "type": "string"
                },
                "secondName": {
                    "type": "string"
                }
            }
        },
        "signup.Response": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/signup.Result"
                }
            }
        },
        "signup.Result": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "signup.SwaggerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/signup.Response"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "structures.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "familyName": {
                    "type": "string"
                },
                "generatedPassword": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "secondFamilyName": {
                    "type": "string"
                },
                "secondName": {
                    "type": "string"
                }
            }
        },
        "token.Response": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/token.Result"
                }
            }
        },
        "token.Result": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/structures.User"
                }
            }
        },
        "token.SwaggerResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "type": "object",
                    "$ref": "#/definitions/token.Response"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}